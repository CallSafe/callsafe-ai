conda deactivate
source /home/mbmk92/.virtualenvs/vishing/bin/activate
cd projects/Korean_Voice_Phishing_Detection/Multimodal/


Command to get the list of non-vishing files
	python3 preprocessing/undersample_nonvishing.py --zip_folder /mnt/c/non_vishing_zips --output_folder data/non_vishing_balanced --sample_size 706
	python3 preprocessing/undersample_nonvishing_mp.py --zip_folder /mnt/c/non_vishing_zips --output_folder data/non_vishing_balanced --sample_size 706 --num_workers 20

Command to merge the chunks from non-vishing folders
	python3 preprocessing/merge_chunks.py --input_folder data/non_vishing_balanced --output_format wav
	
Command to normalyse the audio files
	python3 preprocessing/audio_normalization.py   --src data/audio/vishing   --dest data/audio/vishing/wav   --sr 16000
	python3 preprocessing/audio_normalization.py   --src data/audio/non_vishing   --dest data/audio/non_vishing/wav   --sr 16000
	
Command to build the manifest
	python preprocessing/build_manifest.py

Command to split the dataset in train, val, test by creating manifests
	python preprocessing/dataset_split.py

Command to extract the audio features
	python3 -m features_extraction.build_save_aligned_audio_features --split train --overwrite --workers 12
	python3 -m features_extraction.build_save_aligned_audio_features --split val --overwrite --workers 12
	python3 -m features_extraction.build_save_aligned_audio_features --split test --overwrite --workers 12
	
Command to extract the text features
	python features_extraction/extract_bert_text_features.py --split train --model krsbert
	python features_extraction/extract_bert_text_features.py --split val --model krsbert
	python features_extraction/extract_bert_text_features.py --split test --model krsbert
	
	python features_extraction/extract_bert_text_features.py --split train --model kobert --workers 20
	python features_extraction/extract_bert_text_features.py --split val --model kobert --workers 20
	python features_extraction/extract_bert_text_features.py --split test --model kobert --workers 20
	
Command to run the multimodal training
	python modeling/multimodal_training.py
	python modeling/evaluate_summary.py
	tensorboard --logdir=modeling/logs/multimodal_experiment
	
Commande to run the unimodal training for audio
	python modeling/train_audio_baseline.py --feature_type all
	python modeling/train_audio_baseline.py --feature_type wav2vec2
	python modeling/train_audio_baseline.py --feature_type egemaps
	python modeling/train_audio_baseline.py --feature_type mfcc
	
Command to run the unimodal training for text
	python modeling/train_text_baseline.py --text_feature both
	python modeling/train_text_baseline.py --text_feature krsbert
	python modeling/train_text_baseline.py --text_feature kobert
	